alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
text = input("Type your message:\n").lower()
shift = int(input("Type the shift number:\n"))

#TODO-1: Create a function called 'encrypt' that takes the 'text' and 'shift' as inputs.

def encrypt(text, shift):
  cipher_text = ""
  for letter in text:
    position = alphabet.index(letter) + shift
    if position >= len(alphabet):
      position = position - len(alphabet)
    cipher_text += alphabet[position]
    
  print(f"The encoded text is {cipher_text}")
    
def decrypt(text, shift):
  original_text = ""
  for letter in text:
    position = alphabet.index(letter) - shift
    original_text += alphabet[position]
    
  print(f"The decoded text is {original_text}")
  
  
    #TODO-2: Inside the 'encrypt' function, shift each letter of the 'text' forwards in the alphabet by the shift amount and print the encrypted text.  
    #e.g. 
    #plain_text = "hello"
    #shift = 5
    #cipher_text = "mjqqt"
    #print output: "The encoded text is mjqqt"
    
    #TODO-1: Combine the encrypt() and decrypt() functions into a single function called caesar(). 

def caesar(text, shift, direction):
  cipher_text = ""
  if direction == "decode":
      shift *= -1
  for letter in text:
    position = alphabet.index(letter)
    new_position = position + shift
    cipher_text += alphabet[new_position]
  print(f"The {direction}d text is {cipher_text}")  


caesar(text, shift, direction)
# if direction == "encode":
#   print(f"The encoded text is {new_text}")
# else:
#   print(f"The decoded text is {new_text}")

    ##HINT: How do you get the index of an item in a list:
    #https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-in-a-list

    ##üêõBug alert: What happens if you try to encode the word 'civilization'?üêõ

#TODO-3: Call the encrypt function and pass in the user inputs. You should be able to test the code and encrypt a message. 
if direction == "encode":
  encrypt(text , shift)
else:
  decrypt(text , shift)
  
